{
  "swagger": "2.0",
  "info": {
    "description": "This is the API for HealthTracker, which is an application that keeps track of patient and medication prescription data for hospital patients.",
    "version": "1.0.0",
    "title": "PatientTracker"
  },
  "host": "comp4537-healthtracker-server.herokuapp.com",
  "basePath": "/API/v1",
  "tags": [
    {
      "name": "Logins",
      "description": "Operations to log in to an authorized account"
    },
    {
      "name": "Patients",
      "description": "Access to patient and prescription details"
    },
    {
      "name": "Medications",
      "description": "Access to medication details"
    },
    {
      "name": "Doses",
      "description": "Access to patient's medication dosage details"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/logins": {
      "post": {
        "tags": [
          "Logins"
        ],
        "summary": "Logs user into an auth account",
        "description": "Returns JSON Web Token and determines if user is admin.",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Email and password to login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/LoginResult"
            }
          },
          "400": {
            "description": "Invalid Credentials"
          },
          "401": {
            "description": "Unauthorized User"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/logins/stats": {
      "get": {
        "tags": [
          "Logins"
        ],
        "summary": "Fetches statistical data for admins",
        "description": "User must be an admin to access this page. Returns the number of served requests in each end point.",
        "operationId": "getAdminStats",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/AdminStatResult"
            }
          },
          "403": {
            "description": "Forbidden (not admin)"
          }
        }
      }
    },
    "/patients": {
      "post": {
        "tags": [
          "Patients"
        ],
        "summary": "Adds a new patient",
        "description": "Creates a new patient.",
        "operationId": "addPatient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Email and password to login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Creation",
            "schema": {
              "$ref": "#/definitions/PostPutDeleteResult"
            }
          },
          "400": {
            "description": "Invalid Input"
          }
        }
      },
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Fetches all patients and prescriptions details",
        "description": "For valid response use existing patient_id. Returns patient and an array of their prescribed medication details.",
        "operationId": "getPatient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/GetPatient"
            }
          }
        }
      }
    },
    "/patients/{patient_id}": {
      "get": {
        "tags": [
          "Patients"
        ],
        "summary": "Fetches patient and prescription details",
        "description": "For valid response use existing patient_id. Returns patient and an array of their prescribed medication details.",
        "operationId": "getPatients",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "ID of patient that needs to be fetched",
            "required": true,
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/GetPatient"
            }
          },
          "404": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Patients"
        ],
        "summary": "Updates patient details",
        "description": "For valid response use existing patient_id. Sets new patient data to an existing patient.",
        "operationId": "updatePatient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "ID of the patient that needs to be updated",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Patient elements that need to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Patient"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/PostPutDeleteResult"
            }
          },
          "400": {
            "description": "Invalid Input"
          },
          "404": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Patients"
        ],
        "summary": "Delete patient details",
        "description": "For valid response use existing patient_id. Removes an existing patient.",
        "operationId": "deleteOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "ID of the patient that needs to be deleted",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/PostPutDeleteResult"
            }
          },
          "404": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/medications/{medication_id}": {
      "get": {
        "tags": [
          "Medications"
        ],
        "summary": "Fetches medication details",
        "description": "For valid response use existing medication_id. Returns information about existing medication.",
        "operationId": "getMedication",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "name": "medication_id",
            "in": "path",
            "description": "ID of Medication that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/GetMedication"
            }
          },
          "404": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/doses/{patient_id}/{medication_id}": {
      "post": {
        "tags": [
          "Doses"
        ],
        "summary": "Adds a new patient's medication dosage detail",
        "description": "Creates new patient's medication dosage detail",
        "operationId": "createDosage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "ID of patient that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "medication_id",
            "in": "path",
            "description": "ID of patient that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dose"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Creation",
            "schema": {
              "$ref": "#/definitions/PostPutDeleteResult"
            }
          },
          "400": {
            "description": "Invalid Input"
          },
          "404": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Doses"
        ],
        "summary": "Fetches patient's medication dosage detail",
        "description": "For valid response use existing patient_id and medication_id. Returns the dosage amount for an existing patient's prescribed medication data.",
        "operationId": "getDosage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "ID of patient that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "medication_id",
            "in": "path",
            "description": "ID of patient that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/GetDose"
            }
          },
          "404": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Doses"
        ],
        "summary": "Updates patient's medication dosage detail",
        "description": "For valid response use existing patient_id and medication_id. Sets a new dosage amount for an existing patient's prescribed medication data.",
        "operationId": "updateDosage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "ID of patient that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "medication_id",
            "in": "path",
            "description": "ID of the patient that needs to be updated",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Patient elements that need to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dose"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/PostPutDeleteResult"
            }
          },
          "400": {
            "description": "Invalid Input"
          },
          "404": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Doses"
        ],
        "summary": "Delete patient's medication dosage detail",
        "description": "For valid response use existing patient_id and medication_id. Removes the dosage amount for an existing patient's prescribed medication data.",
        "operationId": "deleteDosage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "auth-token",
            "description": "JWT token created from POST",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "path",
            "description": "ID of patient that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "medication_id",
            "in": "path",
            "description": "ID of the patient that needs to be updated",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "$ref": "#/definitions/PostPutDeleteResult"
            }
          },
          "404": {
            "description": "Invalid ID"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "LoginAccount": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Patient": {
      "type": "object",
      "properties": {
        "full_name": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "age": {
          "type": "integer"
        },
        "weight": {
          "type": "integer"
        },
        "patient_condition": {
          "type": "string"
        }
      }
    },
    "GetPatient": {
      "type": "object",
      "properties": {
        "patient_id": {
          "type": "integer"
        },
        "full_name": {
          "type": "string"
        },
        "sex": {
          "type": "string"
        },
        "age": {
          "type": "integer"
        },
        "weight": {
          "type": "integer"
        },
        "patient_condition": {
          "type": "string"
        },
        "prescription": {
          "type": "array",
          "description": "Patient's medication and dosage details",
          "items": {
            "$ref": "#/definitions/Prescription"
          }
        }
      }
    },
    "Prescription": {
      "type": "object",
      "properties": {
        "medication_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "dosage": {
          "type": "integer"
        }
      }
    },
    "GetMedication": {
      "type": "object",
      "properties": {
        "medication_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Dose": {
      "type": "object",
      "properties": {
        "dosage": {
          "type": "string"
        }
      }
    },
    "GetDose": {
      "type": "object",
      "properties": {
        "patient_id": {
          "type": "integer"
        },
        "medication_id": {
          "type": "integer"
        },
        "dosage": {
          "type": "string"
        }
      }
    },
    "LoginResult": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "PostPutDeleteResult": {
      "type": "object",
      "properties": {
        "fieldCount": {
          "type": "integer"
        },
        "affectedRows": {
          "type": "integer"
        },
        "insertId": {
          "type": "integer"
        },
        "serverStatus": {
          "type": "integer"
        },
        "warningCount": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "protocol41": {
          "type": "integer"
        },
        "changedRows": {
          "type": "integer"
        }
      }
    },
    "AdminStatResult": {
      "type": "object",
      "properties": {
        "POST:/Api/v1/logins": {
          "type": "integer"
        },
        "GET:/API/v1/patients": {
          "type": "integer"
        },
        "GET:/API/v1/patients/:id": {
          "type": "integer"
        },
        "POST:/API/v1/patients": {
          "type": "integer"
        },
        "PUT:/API/v1/patients/:id": {
          "type": "integer"
        },
        "DELETE:/API/v1/patients/:id": {
          "type": "integer"
        },
        "GET:/API/v1/medications/:id": {
          "type": "integer"
        },
        "GET:/API/v1/doses/:pId/:mId": {
          "type": "integer"
        },
        "POST:/API/v1/doses/:pId/:mId": {
          "type": "integer"
        },
        "PUT:/API/v1/doses/:pId/:mId": {
          "type": "integer"
        },
        "DELETE:/API/v1/doses/:pId/:mId": {
          "type": "integer"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}